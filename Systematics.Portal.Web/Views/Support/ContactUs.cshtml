@{
    ViewData["Title"] = "Contact us";
}

@model Systematics.Portal.Web.ViewModels.ContactUsViewModel

<div class="page">
    <h1>@ViewData["Title"]</h1>
    <div id="message"></div>
    <div id="error" class="error"></div>
    <p><small>Fields marked <span class="required">&nbsp;*</span> are compulsory.</small></p>
    @using (Html.BeginForm(new { @id = "feedback-form" }))
    {
        @Html.ValidationSummary(true)

        <div class="row-fluid">
            <div class="editor-label span1 offset1">
                @Html.LabelFor(model => model.Name, new { @class = "inline-label" })<span class="required">&nbsp;*</span>
            </div>
            <div class="editor-field span9">
                 @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class="required"}})
                <p>@Html.ValidationMessageFor(model => model.Name)</p>
            </div>
        </div>

        <div class="row-fluid">
            <div class="editor-label span1 offset1">
                @Html.LabelFor(model => model.Email, new { @class = "inline-label" })<span class="required">&nbsp;*</span>
            </div>
            <div class="editor-field span9">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "required", @type = "email" } })
                <p>@Html.ValidationMessageFor(model => model.Email)</p>
            </div>
        </div>

        <div class="row-fluid">
            <div class="editor-label span1 offset1">
                @Html.LabelFor(model => model.Organisation)
            </div>
            <div class="editor-field span9">
                @Html.EditorFor(model => model.Organisation)
                <p>@Html.ValidationMessageFor(model => model.Organisation)</p>
            </div>
        </div>

        <div class="row-fluid">
            <div class="editor-label span1 offset1">
                @Html.LabelFor(model => model.Location)
            </div>
            <div class="editor-field span9">
                @Html.EditorFor(model => model.Location)
                <p>@Html.ValidationMessageFor(model => model.Location)</p>
            </div>
        </div>

        <div class="row-fluid">
            <div class="editor-label span1 offset1">
                @Html.LabelFor(model => model.Subject, new { @class = "inline-label" })<span class="required">&nbsp;*</span>
            </div>
            <div class="editor-field span9">
                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "required" } })
                <p>@Html.ValidationMessageFor(model => model.Subject)</p>
            </div>
        </div>

        <div class="row-fluid">
            <div class="editor-label span1 offset1">
                @Html.LabelFor(model => model.Message, new { @class = "inline-label" })<span class="required">&nbsp;*</span>
            </div>
            <div class="editor-field span9">
                @Html.TextAreaFor(model => model.Message, new { @class = "required text-box multi-line" })
                <p>@Html.ValidationMessageFor(model => model.Message)</p>
            </div>
        </div>
        <br />
        <div class="row-fluid">
            <div class="span1 offset1">
                <a class="btn btn-home btn-small" role="button" href="#" onclick="sendFeedback()">Send</a>
            </div>
        </div>
    }
</div>
<script type="text/javascript">

    function sendFeedback() {
        //var postData = $('form').serialize();

        //alert('valid() is ' + $('form').valid());

        const RESULT = $('form').valid({
            rules: {
                email: {
                    required: true,
                    email: true
                }
            }
        });

        if (RESULT) {
            //$("#loading").show();

            $.ajax({
                url: '/Support/ContactUs',
                type: 'POST',
                contentType: 'application/json;',
                cache: false,
                data: JSON.stringify({
                    //recipientId: recipient,
                    name: $('#Name').val(),
                    email: $('#Email').val(),
                    organisation: $('#Organisation').val(),
                    location: $('#Location').val(),
                    subject: $('#Subject').val(),
                    message: $('#Message').val()
                }),
                success: function (result) {
                    alert("stringif is " + JSON.stringify(result)); 
                    alert('result.Error is ' + result.error + ' and result.Information is ' + result.information);
                    //$("#loading").hide();
                    updateMessages(result);
                },
                complete: function () {
                    //$("#loading").hide();
                }
            });
        }
    }
</script>